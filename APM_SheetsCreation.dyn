{
  "Uuid": "59bc6513-d614-4205-836d-f45e407c4844",
  "IsCustomNode": false,
  "Description": null,
  "Name": "APM_SheetsCreation",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 680,
      "SelectedString": "OST_Views",
      "NodeType": "ExtensionNode",
      "Id": "be418e55ee4b40268187865b2c1c7abc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa8c18ca1ce640d3a62df31fe54162b8",
          "Name": "Category",
          "Description": "La categoría seleccionada",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todas las categorías integradas"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "3d2a9f212fa34e2cb242f11fa7f4b8b0",
      "Inputs": [
        {
          "Id": "e9e33c1aac114b6d97c37728edd96d82",
          "Name": "Category",
          "Description": "La categoría",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79f9ec69f330485080109292f6db4834",
          "Name": "Elements",
          "Description": "Un tipo de elemento",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Obtiene todos los elementos de la categoría especificada en el modelo"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "328827cbc7ab4218b2e24044002c062c",
      "Inputs": [
        {
          "Id": "39e37c2dcc2c4e1fa55d8f397157d376",
          "Name": "list",
          "Description": "Lista de la cual se debe recuperar un elemento.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b58220762092495dbee269b402273ee6",
          "Name": "index",
          "Description": "El índice del elemento que se debe recuperar.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebc6e867c8714f338ba40c05962891a0",
          "Name": "item",
          "Description": "Elemento de la lista en el índice especificado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Devuelve un elemento de la lista especificada que se encuentra en el índice indicado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "8..47;",
      "Id": "d9dfa7c8b35447bca79604120e669e07",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ec6680a7cac48288d7a106f3a5aa9bc",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "ef337322465f4f2c81d772ea02b259d3",
      "Inputs": [
        {
          "Id": "6aa25dd530834f8388e17304a89c25a9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8965d620a6994c8cbcfa1b4805446f76",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtiene el nombre del elemento.\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..19;",
      "Id": "33088e4079574f9db7a940ef6b979aaf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ed8c2f4c54a49cfaadf5e4f1f0c4d60",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DIST_\"+ nombre;",
      "Id": "4980ec06c1654d0db10be8d5214f10d4",
      "Inputs": [
        {
          "Id": "56d94ad353624fbc8b09406315713f0a",
          "Name": "nombre",
          "Description": "nombre",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8796bc738cb64e6e911feeea7907c309",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d82f644a1c4840db894f6bcd34f2b510",
      "Inputs": [
        {
          "Id": "351e2f6683a04c77b953aed8d44080f7",
          "Name": "list",
          "Description": "Lista de la cual se debe recuperar un elemento.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82072f8883cc4e5197d759d4766b1aa7",
          "Name": "index",
          "Description": "El índice del elemento que se debe recuperar.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "333b87b669824b1895c8ddae6b73aab8",
          "Name": "item",
          "Description": "Elemento de la lista en el índice especificado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Devuelve un elemento de la lista especificada que se encuentra en el índice indicado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "25c54a40d735491ca14d13393aba2c35",
      "Inputs": [
        {
          "Id": "1a065719f37148669ae1841912832273",
          "Name": "list",
          "Description": "Lista de la cual se debe recuperar un elemento.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c8ec724b1544a88ab2a259e78d333d5",
          "Name": "index",
          "Description": "El índice del elemento que se debe recuperar.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed68383943da472ab8ea7eeb82875908",
          "Name": "item",
          "Description": "Elemento de la lista en el índice especificado.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Devuelve un elemento de la lista especificada que se encuentra en el índice indicado.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "20..39;",
      "Id": "54da924b1eb54bff814668e2b1064a53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bbe262bae6a462db717dcd0764f3b49",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"RCP_\"+ nombre;",
      "Id": "65611399a4794bc18c0c9118234415f2",
      "Inputs": [
        {
          "Id": "66c85d0331984ef88deca53c9cd86519",
          "Name": "nombre",
          "Description": "nombre",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acee1abf02d044b6a6c1127f2dca03b3",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "eb7211013e7948af8475cced26892d1b",
      "Inputs": [
        {
          "Id": "15e6918f6df448a2a0e8c562de0b86b1",
          "Name": "item0",
          "Description": "Índice de elemento núm.0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e10bed1e9354ee788cd289fa763cab2",
          "Name": "item1",
          "Description": "Índice de elemento núm.1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab180b8e4c3e4939bd11c488a9a6720b",
          "Name": "list",
          "Description": "Una lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crea una nueva lista a partir de las entradas especificadas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "aa10bba7936e4889a821a14c5843c691",
      "Inputs": [
        {
          "Id": "6ac52ee4501d4f028102e9ef7b8840bb",
          "Name": "list",
          "Description": "Lista de la que se debe obtener el recuento de elementos.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7062ec757bb242329115549b2ea15c94",
          "Name": "count",
          "Description": "Longitud de la lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Devuelve el número de elementos almacenados en la lista especificada.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "39d80ee94c314002aaf2a3e098f02533",
      "Inputs": [
        {
          "Id": "cd358ede0e424713ad57dabb5b9e72cd",
          "Name": "list",
          "Description": "Lista de la que se debe obtener el recuento de elementos.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66291aa5731846f29e1c46893892199f",
          "Name": "count",
          "Description": "Longitud de la lista.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Devuelve el número de elementos almacenados en la lista especificada.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9e1963f740fa4914b7eb3777e46dd6b6",
      "Inputs": [
        {
          "Id": "6985aefffe8b4a11bdb69000b1a8864d",
          "Name": "start",
          "Description": "El número o letra inicial de la secuencia\r\nValor por defecto: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49ba2c8a6445455ca463da47c8c3f68b",
          "Name": "amount",
          "Description": "Cantidad de números en la secuencia\r\nValor por defecto: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0323fb007e6444ce8fb044f2f74e85be",
          "Name": "step",
          "Description": "Espacio entre números o letras\r\nValor por defecto: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9907c5c2b8524c0f929d6ebc1ce94433",
          "Name": "seq",
          "Description": "Nueva secuencia",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Crea una secuencia de números"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "101;",
      "Id": "8a15bd36ba2a48a6b8eb8f870edb6b49",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a0d56c599694c75a812f819486d4826",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "3fb963a8f27f44a3914e73c3530ce084",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b40a1f45fba3485cad4977f68de20b22",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "52cc11c510d549d5addc6532e31e474a",
      "Inputs": [
        {
          "Id": "0acb930719c545129ce12702889e9c43",
          "Name": "x",
          "Description": "Valor X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f6751161b4141cfbb34909cd2d457e4",
          "Name": "y",
          "Description": "Valor Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a323b0fb996a4719aef3f201c113ed77",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Suma X a Y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"A_\";",
      "Id": "b52bb0791aff4196a0f48e8e02c4ef62",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dcd20e0fdeb6425cb07987340a6fd061",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "240daaba03c940faac6cc698cc72ebc8",
      "Inputs": [
        {
          "Id": "795fd4907b0b4bb7be736e2d45beb8d4",
          "Name": "x",
          "Description": "Valor X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e5a4e77bbb0467ea43e749ddebc59d6",
          "Name": "y",
          "Description": "Valor Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2de5dd662cf14ac5940172a71e39c266",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Suma X a Y.\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"B_\";",
      "Id": "e31cae133f2e45908a921cee6fdc0183",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d79db6bf130046d495f4f9fd3bdd0630",
          "Name": "",
          "Description": "Valor de la expresión en la línea 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permite creación directa de código de DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Sequence, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5ba5e2e63b9b4e41ac720de437d62e1a",
      "Inputs": [
        {
          "Id": "84190e97e81f4078b15de33f8ce0a24e",
          "Name": "start",
          "Description": "El número o letra inicial de la secuencia\r\nValor por defecto: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51b0cc8f12214aeeae4cc83d52f11f8a",
          "Name": "amount",
          "Description": "Cantidad de números en la secuencia\r\nValor por defecto: 10",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd383dd776ad44b695e66c269b834b06",
          "Name": "step",
          "Description": "Espacio entre números o letras\r\nValor por defecto: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63be2572e84f456bbc51548b2fde651d",
          "Name": "seq",
          "Description": "Nueva secuencia",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Crea una secuencia de números"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "82cf4a71ab984977bf49fd752dab139f",
      "Inputs": [
        {
          "Id": "eaf47820a87542d297827cf67258a062",
          "Name": "item0",
          "Description": "Índice de elemento núm.0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caa71ac8f0b8419b9763e5d5084ec0a9",
          "Name": "item1",
          "Description": "Índice de elemento núm.1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b336f05797cf4caaa9892f9028cc8988",
          "Name": "list",
          "Description": "Una lista",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Crea una nueva lista a partir de las entradas especificadas"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "07319c4be96c41eeaef68ca5886fb36b",
      "Inputs": [
        {
          "Id": "b159b21147d2440dbba15e898d6a6b0a",
          "Name": "list",
          "Description": "Lista que se debe aplanar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d74e3582ca404946b1e24f8ed5f64880",
          "Name": "amt",
          "Description": "Capas de anidamiento que se deben eliminar.\n\nint\nValor por defecto : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f68db7e8784e486d9e68c06a5543cdb8",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplana una lista anidada de listas aplicando el valor especificado.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "A0 métrico:A0 métrico",
      "NodeType": "ExtensionNode",
      "Id": "a2c144fedb8d43518960f105bec6576e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a795af9dfce344d1ac53e97eb757914b",
          "Name": "Family Type",
          "Description": "Family Type seleccionado",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Todos los tipos de familia disponibles en el documento"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4bd8678d1c564dbc99d5ab7d148eaa80",
      "Inputs": [
        {
          "Id": "a9d28c52b46c4d0c998e4a535136ee68",
          "Name": "list",
          "Description": "Lista que se debe aplanar.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1ec75c261244d7ba668da8730336fc0",
          "Name": "amt",
          "Description": "Capas de anidamiento que se deben eliminar.\n\nint\nValor por defecto : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc26f483615d4fa19ccbd1cd07e05c49",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Aplana una lista anidada de listas aplicando el valor especificado.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Views.Sheet.ByNameNumberTitleBlockAndView@string,string,Revit.Elements.FamilyType,Revit.Elements.Views.View",
      "Id": "5bb078b1759041a5969727d9638e2b16",
      "Inputs": [
        {
          "Id": "7c10184bd40c481c82e29e6fa880a5a3",
          "Name": "sheetName",
          "Description": "Nombre de plano como cadena.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9125f5b5ce442e0968aa7131a23260b",
          "Name": "sheetNumber",
          "Description": "Número de plano como cadena.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03dceb7b3e554eb985b3bc2f93cfcaad",
          "Name": "titleBlockFamilyType",
          "Description": "Cuadro de rotulación que se asignará al plano creado.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9698069f87394e7eb95a90eca1ff3f2c",
          "Name": "view",
          "Description": "Vistas que se insertarán en el plano.\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "501b3ea478924665bf899e5de7e851be",
          "Name": "Sheet",
          "Description": "Sheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Crea un plano de Revit por el nombre de plano, número, un cuadro de rotulación FamilyType y un conjunto de vistas. Este método empaquetará automáticamente las vistas en el plano.\n\nSheet.ByNameNumberTitleBlockAndView (sheetName: string, sheetNumber: string, titleBlockFamilyType: FamilyType, view: View): Sheet"
    }
  ],
  "Connectors": [
    {
      "Start": "fa8c18ca1ce640d3a62df31fe54162b8",
      "End": "e9e33c1aac114b6d97c37728edd96d82",
      "Id": "9940132a389f47f4809a38b837a24cd3"
    },
    {
      "Start": "79f9ec69f330485080109292f6db4834",
      "End": "39e37c2dcc2c4e1fa55d8f397157d376",
      "Id": "ae6911a4a984470da7219654a440afc4"
    },
    {
      "Start": "ebc6e867c8714f338ba40c05962891a0",
      "End": "6aa25dd530834f8388e17304a89c25a9",
      "Id": "2537568e7741459d8eb8218f5041f9b0"
    },
    {
      "Start": "ebc6e867c8714f338ba40c05962891a0",
      "End": "9698069f87394e7eb95a90eca1ff3f2c",
      "Id": "8b55db781b2249599b0993ee8031dfd7"
    },
    {
      "Start": "9ec6680a7cac48288d7a106f3a5aa9bc",
      "End": "b58220762092495dbee269b402273ee6",
      "Id": "4a9d052d95814391808a3e9f14c7e4a1"
    },
    {
      "Start": "8965d620a6994c8cbcfa1b4805446f76",
      "End": "351e2f6683a04c77b953aed8d44080f7",
      "Id": "e1df5c6b5b344d4996ce5b264ddd7205"
    },
    {
      "Start": "8965d620a6994c8cbcfa1b4805446f76",
      "End": "1a065719f37148669ae1841912832273",
      "Id": "4eb3618100684ddeaeaab1209ec9e631"
    },
    {
      "Start": "2ed8c2f4c54a49cfaadf5e4f1f0c4d60",
      "End": "82072f8883cc4e5197d759d4766b1aa7",
      "Id": "f3fcccd1adfd4f5697e9f0d3b4df1e2f"
    },
    {
      "Start": "8796bc738cb64e6e911feeea7907c309",
      "End": "15e6918f6df448a2a0e8c562de0b86b1",
      "Id": "304ed59c249245dbae06fdee0dbd1b3d"
    },
    {
      "Start": "333b87b669824b1895c8ddae6b73aab8",
      "End": "56d94ad353624fbc8b09406315713f0a",
      "Id": "81413a7e55fd470e9ffa9cce3a6ed5b6"
    },
    {
      "Start": "333b87b669824b1895c8ddae6b73aab8",
      "End": "6ac52ee4501d4f028102e9ef7b8840bb",
      "Id": "12d01a759b8f4a3aad52c9f3210e63d4"
    },
    {
      "Start": "ed68383943da472ab8ea7eeb82875908",
      "End": "66c85d0331984ef88deca53c9cd86519",
      "Id": "c8b0438e06bb4610bc832d44e901e486"
    },
    {
      "Start": "ed68383943da472ab8ea7eeb82875908",
      "End": "cd358ede0e424713ad57dabb5b9e72cd",
      "Id": "593c07cbe7314f96a877c1b0049c4ec3"
    },
    {
      "Start": "0bbe262bae6a462db717dcd0764f3b49",
      "End": "9c8ec724b1544a88ab2a259e78d333d5",
      "Id": "ae90f85213184c84ab137d70375d1012"
    },
    {
      "Start": "acee1abf02d044b6a6c1127f2dca03b3",
      "End": "6e10bed1e9354ee788cd289fa763cab2",
      "Id": "08baa21c8b114501be326df4557f3c22"
    },
    {
      "Start": "ab180b8e4c3e4939bd11c488a9a6720b",
      "End": "a9d28c52b46c4d0c998e4a535136ee68",
      "Id": "5c1efed82a14430091b21fcf47577edc"
    },
    {
      "Start": "7062ec757bb242329115549b2ea15c94",
      "End": "49ba2c8a6445455ca463da47c8c3f68b",
      "Id": "08f6ba5c49904ac4bb7dcd81462b5c0d"
    },
    {
      "Start": "66291aa5731846f29e1c46893892199f",
      "End": "51b0cc8f12214aeeae4cc83d52f11f8a",
      "Id": "53a1c38730d74aeb9ddd027aecc4c0d9"
    },
    {
      "Start": "9907c5c2b8524c0f929d6ebc1ce94433",
      "End": "8f6751161b4141cfbb34909cd2d457e4",
      "Id": "c62e79a3ee3148c1a481a55f8ef32327"
    },
    {
      "Start": "6a0d56c599694c75a812f819486d4826",
      "End": "6985aefffe8b4a11bdb69000b1a8864d",
      "Id": "f5c7c54c00084891a4a2c08e4c71fcf1"
    },
    {
      "Start": "6a0d56c599694c75a812f819486d4826",
      "End": "84190e97e81f4078b15de33f8ce0a24e",
      "Id": "7f112bf7e2644ff6ab9af41a8bb90bb8"
    },
    {
      "Start": "b40a1f45fba3485cad4977f68de20b22",
      "End": "0323fb007e6444ce8fb044f2f74e85be",
      "Id": "2f0988c13f6d452096f181d90434e35a"
    },
    {
      "Start": "b40a1f45fba3485cad4977f68de20b22",
      "End": "dd383dd776ad44b695e66c269b834b06",
      "Id": "0ea246a9598845e6a3e03400b6dc7a42"
    },
    {
      "Start": "a323b0fb996a4719aef3f201c113ed77",
      "End": "eaf47820a87542d297827cf67258a062",
      "Id": "d1bdc06ca1c947de8b45886bb49bcd2d"
    },
    {
      "Start": "dcd20e0fdeb6425cb07987340a6fd061",
      "End": "0acb930719c545129ce12702889e9c43",
      "Id": "c3a24db456bb45b7aedb5a196274b7e9"
    },
    {
      "Start": "2de5dd662cf14ac5940172a71e39c266",
      "End": "caa71ac8f0b8419b9763e5d5084ec0a9",
      "Id": "59b91163f18241ac9690f07fc71c86b6"
    },
    {
      "Start": "d79db6bf130046d495f4f9fd3bdd0630",
      "End": "795fd4907b0b4bb7be736e2d45beb8d4",
      "Id": "41aecf956dc74134abba5d8bcd1dcf8d"
    },
    {
      "Start": "63be2572e84f456bbc51548b2fde651d",
      "End": "0e5a4e77bbb0467ea43e749ddebc59d6",
      "Id": "80765c5bd38c4ff1a01e474971cb896c"
    },
    {
      "Start": "b336f05797cf4caaa9892f9028cc8988",
      "End": "b159b21147d2440dbba15e898d6a6b0a",
      "Id": "cc12f3f4930343118ad20e3ae1906381"
    },
    {
      "Start": "f68db7e8784e486d9e68c06a5543cdb8",
      "End": "c9125f5b5ce442e0968aa7131a23260b",
      "Id": "61d7c46f12224a70bc5cf4229f7767c2"
    },
    {
      "Start": "a795af9dfce344d1ac53e97eb757914b",
      "End": "03dceb7b3e554eb985b3bc2f93cfcaad",
      "Id": "4383704c7a224125968a069ebbe4051c"
    },
    {
      "Start": "bc26f483615d4fa19ccbd1cd07e05c49",
      "End": "7c10184bd40c481c82e29e6fa880a5a3",
      "Id": "5bfb3bedd06b426bb83a4250ad7a5b84"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "5bb078b1-7590-41a5-9697-27d9638e2b16",
      "Binding": {
        "ByNameNumberTitleBlockAndView_InClassDecl-1_InFunctionScope-1_Instance0_5bb078b1-7590-41a5-9697-27d9638e2b16": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.0.7460",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Vista preliminar en segundo plano",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "be418e55ee4b40268187865b2c1c7abc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 221.537640674049,
        "Y": 673.04410168512265
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "3d2a9f212fa34e2cb242f11fa7f4b8b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 433.60000000000008,
        "Y": 672.0
      },
      {
        "ShowGeometry": true,
        "Name": "Views",
        "Id": "328827cbc7ab4218b2e24044002c062c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 838.25709888565279,
        "Y": 539.594864306248
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d9dfa7c8b35447bca79604120e669e07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 708.88452424942864,
        "Y": 569.00477209607334
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "ef337322465f4f2c81d772ea02b259d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1069.1832778078183,
        "Y": 539.22685942317037
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "33088e4079574f9db7a940ef6b979aaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1176.0202167023142,
        "Y": 444.31667840790527
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4980ec06c1654d0db10be8d5214f10d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1670.3354546410148,
        "Y": 371.75646389858105
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "d82f644a1c4840db894f6bcd34f2b510",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1328.0163295972472,
        "Y": 462.94928044704506
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "25c54a40d735491ca14d13393aba2c35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1329.3846237901096,
        "Y": 592.81806407983606
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "54da924b1eb54bff814668e2b1064a53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1174.371420974086,
        "Y": 633.01871550195654
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65611399a4794bc18c0c9118234415f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1676.9487798776008,
        "Y": 461.09846047648807
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "eb7211013e7948af8475cced26892d1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1974.9432175281918,
        "Y": 379.31443129485058
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "aa10bba7936e4889a821a14c5843c691",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1671.4127520786712,
        "Y": 740.44762643169133
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "39d80ee94c314002aaf2a3e098f02533",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1670.6528059400052,
        "Y": 907.499804769107
      },
      {
        "ShowGeometry": true,
        "Name": "Sequence",
        "Id": "9e1963f740fa4914b7eb3777e46dd6b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1960.5415957799673,
        "Y": 719.32371493974711
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8a15bd36ba2a48a6b8eb8f870edb6b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1766.0316050388842,
        "Y": 654.8895373285892
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3fb963a8f27f44a3914e73c3530ce084",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1764.5668473545481,
        "Y": 823.43309973088969
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "52cc11c510d549d5addc6532e31e474a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2194.9219718872146,
        "Y": 685.08413447600969
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b52bb0791aff4196a0f48e8e02c4ef62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2065.7733004862557,
        "Y": 636.51825647047667
      },
      {
        "ShowGeometry": true,
        "Name": "+",
        "Id": "240daaba03c940faac6cc698cc72ebc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2200.4389644853404,
        "Y": 850.71669268785286
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e31cae133f2e45908a921cee6fdc0183",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2065.5081031342233,
        "Y": 854.83914012839034
      },
      {
        "ShowGeometry": true,
        "Name": "Sequence",
        "Id": "5ba5e2e63b9b4e41ac720de437d62e1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1963.5571370517725,
        "Y": 943.07618118091455
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "82cf4a71ab984977bf49fd752dab139f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2422.26704417139,
        "Y": 768.53827697920758
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "07319c4be96c41eeaef68ca5886fb36b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2579.8568621525092,
        "Y": 770.00431850471773
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "a2c144fedb8d43518960f105bec6576e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2786.8659820242005,
        "Y": 619.99446124950214
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "4bd8678d1c564dbc99d5ab7d148eaa80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2138.8330388754421,
        "Y": 381.40159673847245
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet.ByNameNumberTitleBlockAndView",
        "Id": "5bb078b1759041a5969727d9638e2b16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3063.8319882353007,
        "Y": 487.35570745137488
      }
    ],
    "Annotations": [
      {
        "Id": "749a7064aa7a4d60bbb129bd108f6c60",
        "Title": "SELECT ALL VIEWS IN THE PROJECT:\r\n---------------",
        "Nodes": [
          "be418e55ee4b40268187865b2c1c7abc",
          "3d2a9f212fa34e2cb242f11fa7f4b8b0"
        ],
        "Left": 211.537640674049,
        "Top": 604.4,
        "Width": 406.46235932595107,
        "Height": 161.24410168512267,
        "FontSize": 24.0,
        "InitialTop": 672.0,
        "InitialHeight": 123.64410168512265,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "05aedacab06949f78e6220d48e87812a",
        "Title": "FILTER VIEWS:\r\n---------------",
        "Nodes": [
          "328827cbc7ab4218b2e24044002c062c",
          "d9dfa7c8b35447bca79604120e669e07"
        ],
        "Left": 698.88452424942864,
        "Top": 471.994864306248,
        "Width": 328.57257463622415,
        "Height": 189.60990778982531,
        "FontSize": 24.0,
        "InitialTop": 539.594864306248,
        "InitialHeight": 152.00990778982529,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "88d4561155f14549b1e3afadaf71db6f",
        "Title": "SHEETS NUMBERS:\r\n------------------------",
        "Nodes": [
          "aa10bba7936e4889a821a14c5843c691",
          "39d80ee94c314002aaf2a3e098f02533",
          "9e1963f740fa4914b7eb3777e46dd6b6",
          "8a15bd36ba2a48a6b8eb8f870edb6b49",
          "3fb963a8f27f44a3914e73c3530ce084",
          "52cc11c510d549d5addc6532e31e474a",
          "b52bb0791aff4196a0f48e8e02c4ef62",
          "240daaba03c940faac6cc698cc72ebc8",
          "e31cae133f2e45908a921cee6fdc0183",
          "5ba5e2e63b9b4e41ac720de437d62e1a",
          "82cf4a71ab984977bf49fd752dab139f",
          "07319c4be96c41eeaef68ca5886fb36b"
        ],
        "Left": 1660.6528059400052,
        "Top": 568.91825647047665,
        "Width": 1114.8040562125038,
        "Height": 517.957924710438,
        "FontSize": 24.0,
        "InitialTop": 636.51825647047667,
        "InitialHeight": 627.39726106020555,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "a83b9cbfd13d4c418f0c87e6e240b6b6",
        "Title": "LIST NAME:\r\n------------",
        "Nodes": [
          "4980ec06c1654d0db10be8d5214f10d4",
          "65611399a4794bc18c0c9118234415f2",
          "eb7211013e7948af8475cced26892d1b",
          "4bd8678d1c564dbc99d5ab7d148eaa80"
        ],
        "Left": 1660.3354546410148,
        "Top": 304.156463898581,
        "Width": 674.09758423442725,
        "Height": 249.54199657790704,
        "FontSize": 24.0,
        "InitialTop": 371.75646389858105,
        "InitialHeight": 211.94199657790702,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "eda337ecaee04b71a03013cb9eae4866",
        "Title": "TO REVIT creating sheets:\r\n-------------",
        "Nodes": [
          "5bb078b1759041a5969727d9638e2b16"
        ],
        "Left": 3053.8319882353007,
        "Top": 419.75570745137486,
        "Width": 296.8,
        "Height": 237.00000000000003,
        "FontSize": 24.0,
        "InitialTop": 487.35570745137488,
        "InitialHeight": 199.4,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "06971c7919bf4fa1a972dc5192c3de10",
        "Title": "FILTERING TYPES OF VIEWS:\r\n----------------",
        "Nodes": [
          "ef337322465f4f2c81d772ea02b259d3",
          "33088e4079574f9db7a940ef6b979aaf",
          "d82f644a1c4840db894f6bcd34f2b510",
          "25c54a40d735491ca14d13393aba2c35",
          "54da924b1eb54bff814668e2b1064a53"
        ],
        "Left": 1059.1832778078183,
        "Top": 376.71667840790525,
        "Width": 459.40134598229128,
        "Height": 348.90203709405125,
        "FontSize": 24.0,
        "InitialTop": 444.31667840790527,
        "InitialHeight": 311.30203709405123,
        "TextblockHeight": 57.6,
        "Background": "#FFD8D8D8"
      }
    ],
    "X": -290.82282593762579,
    "Y": 121.85850763926024,
    "Zoom": 0.65493611417436137
  }
}